Принципы ООП.
1. Наследование
При разработке приложения наследованием удобно пользоваться при создании классов, имеющих похожие характеристики и похожее поведение. Например, можно создать класс товаров, и все они будут иметь цену, количество оставшееся на складе, и вес. Однако у конкретных товаров, например чая и кофе, есть различные свои характеристики, которые будут указаны в дочернем классе.
2. Инкапсуляция
Инкапсуляция позволяет запретить изменение характеристик объекта другим пользователям. В том же примере, упомянотом выше, нам нежелательно, чтобы кто-то без разрешения изменял цену на товары, поэтому мы сделаем цену private.
3. Полиморфизм
Принцип полиморфизма дает возможность переопределять одинаковые функции для разных объектов. Допустим, у нас есть функция - посчитать стоимость товара, которая умножает цену на количество. Но для чая стоимость измеряется в пакетиках, а для кофе - в граммах. Мы можем переопределить эту функцию так, чтобы она считала для каждого объекта по-своему.